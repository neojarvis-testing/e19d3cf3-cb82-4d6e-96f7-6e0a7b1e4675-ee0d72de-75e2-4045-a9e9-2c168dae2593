{"version":3,"sources":["./src/app/components/error/error.component.ts","./src/app/components/error/error.component.html","./src/app/services/planapplicationform.service.ts","./src/app/components/userappliedplans/userappliedplans.component.ts","./src/app/components/userappliedplans/userappliedplans.component.html","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/services/savingsplan.service.ts","./src/app/components/managereditsavingsplan/managereditsavingsplan.component.ts","./src/app/components/managereditsavingsplan/managereditsavingsplan.component.html","./src/app/components/useraddfeedback/useraddfeedback.component.ts","./src/app/components/useraddfeedback/useraddfeedback.component.html","./src/app/components/userviewfeedback/userviewfeedback.component.ts","./src/app/components/userviewfeedback/userviewfeedback.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/managercreatesavingsplan/managercreatesavingsplan.component.ts","./src/app/components/managercreatesavingsplan/managercreatesavingsplan.component.html","./src/app/components/usernav/usernav.component.ts","./src/app/components/usernav/usernav.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/managerviewapplicationform/managerviewapplicationform.component.ts","./src/app/components/managerviewapplicationform/managerviewapplicationform.component.html","./src/app/app.module.ts","./src/app/components/userviewsavingsplan/userviewsavingsplan.component.ts","./src/app/components/userviewsavingsplan/userviewsavingsplan.component.html","./src/app/components/registration/registration.component.ts","./src/app/components/registration/registration.component.html","./src/app/components/managerviewsavingsplan/managerviewsavingsplan.component.ts","./src/app/components/managerviewsavingsplan/managerviewsavingsplan.component.html","./src/app/components/authguard/auth.guard.ts","./src/app/components/managernav/managernav.component.ts","./src/app/components/managernav/managernav.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/managerviewfeedback/managerviewfeedback.component.ts","./src/app/components/managerviewfeedback/managerviewfeedback.component.html","./src/app/services/feedback.service.ts","./src/app/services/auth.service.ts","./src/app/components/userplanapplicationform/userplanapplicationform.component.ts","./src/app/components/userplanapplicationform/userplanapplicationform.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.setErrorMessage();\n  }\n\n  @Input() errorCode: number = 404;\n  messageTitle: string = '';\n  messageBody: string = '';\n\n\n  setErrorMessage() {\n    switch (this.errorCode) {\n      case 404:\n        this.messageTitle = 'Something Went Wrong';\n        this.messageBody = \"We're sorry, but an error occured. Please try again later.\";\n        break;\n      case 500:\n        this.messageTitle = 'Something Went Wrong';\n        this.messageBody = \"We're sorry, but an error occured. Please try again later.\";\n        break;\n      default:\n        this.messageTitle = 'Unknown Error';\n        this.messageBody = 'An unexpected error occurred. Please try again later.';\n\n    }\n  }\n\n  goBack() { window.history.back(); }\n  \n}","\n<div class=\"error-handler-container\">\n    <img src=\"assets/Finance Hub (1).png\" alt=\"Logo\" class=\"logo\">\n    <div class=\"error-content\">\n        <h2>{{ messageTitle }}</h2>\n        <p>{{ messageBody }}</p>\n        <button class=\"back-button\" (click)=\"goBack()\">Go Back</button>\n    </div>\n</div>\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { PlanApplication } from '../models/planapplication.model';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlanapplicationformService {\n\n  public apiUrl:string=environment.apiUrl;\n\n  plan: PlanApplication = {\n    AppliedAmount: 0,\n    Status: '',\n    ApplicationDate: '',\n    Remarks: '',\n    ProofDocument: '',\n    UserId: 0,\n    SavingsPlanId: 0\n  }\n\n  constructor(private http: HttpClient) { }\n\n  \n\n  public addPlanApplication(plan: PlanApplication): Observable<PlanApplication> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('Token')\n      })\n    };\n    return this.http.post<PlanApplication>(`${this.apiUrl}/api/PlanApplication/`, plan, httpOptions);\n  }\n\n  deletePlanApplication(planId: number): Observable<void> {\n    console.log(\"delete plan in serv \", planId);\n    return this.http.delete<void>(`${this.apiUrl}/api/PlanApplication/${planId}`);\n  }\n\n  getAppliedPlans(userId: number): Observable<PlanApplication[]> {\n    return this.http.get<PlanApplication[]>(`${this.apiUrl}/api/PlanApplication/user/${userId}`);\n  }\n\n  getAllPlanApplications(): Observable<PlanApplication[]> {\n    return this.http.get<PlanApplication[]>(`${this.apiUrl}/api/PlanApplication`);\n  }\n\n  updatePlanApplication(planId: number, updatedData: PlanApplication): Observable<PlanApplication> {\n    return this.http.put<PlanApplication>(`${this.apiUrl}/api/PlanApplication/${planId}`, updatedData);\n  }\n\n  getPlanApplicationsBySavingsPlanIdAndUserId(savingsPlanId: number, userId: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/api/PlanApplication/savingsPlan/${savingsPlanId}/user/${userId}`);\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { PlanApplication } from 'src/app/models/planapplication.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { PlanapplicationformService } from 'src/app/services/planapplicationform.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-userappliedplans',\n  templateUrl: './userappliedplans.component.html',\n  styleUrls: ['./userappliedplans.component.css']\n})\nexport class UserappliedplansComponent implements OnInit {\n  planApplications: PlanApplication[] = [];\n  userId: number;\n  planApplicationId: number;\n  isEditPopupOpen = false;\n  isDeletePopupOpen = false;\n  showPopup: boolean = false;\n  selectedPlan: PlanApplication | null = null;\n  planToDelete: PlanApplication | null = null;\n\n  constructor(\n    private planapplicationformService: PlanapplicationformService,\n    private authService: AuthService,\n    private sanitizer: DomSanitizer\n  ) { }\n\n  ngOnInit(): void {\n    this.userId = +localStorage.getItem('userId');\n    console.log(\"User ID:\", this.userId);\n    this.getAllPlanApplicationsByUserId(this.userId);\n  }\n  getAllPlanApplicationsByUserId(userId: number): void {\n    this.planapplicationformService.getAppliedPlans(userId).subscribe((data: PlanApplication[]) => {\n      this.planApplications = data;\n      console.log(\"Fetched Plan Applications:\", this.planApplications);\n    }, (error) => {\n      console.error(\"Error fetching plan applications:\", error);\n    });\n  }\n\n  openEditPopup(planApplicationId: number, previousPlan: PlanApplication): void {\n    this.planApplicationId = planApplicationId;\n    this.selectedPlan = { ...previousPlan };\n    this.isEditPopupOpen = true;\n  }\n\n  closeEditPopup(): void {\n    this.isEditPopupOpen = false;\n    this.selectedPlan = null;\n  }\n\n  saveChanges(): void {\n    if (this.selectedPlan) {\n      this.planapplicationformService.updatePlanApplication(this.planApplicationId, this.selectedPlan).subscribe(\n        () => {\n          this.getAllPlanApplicationsByUserId(this.userId);\n          Swal.fire('Success!', 'Your plan has been updated.', 'success');\n        },\n        (error) => {\n          console.error(\"Error updating plan application:\", error);\n        }\n      );\n      this.closeEditPopup();\n    }\n  }\n\n  confirmDelete(planApplicationId: number): void {\n    this.planApplicationId = planApplicationId;\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'You won\\'t be able to revert this!',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.deletePlan();\n      }\n    });\n  }\n\n  deletePlan(): void {\n    if (this.planApplicationId) {\n      this.planapplicationformService.deletePlanApplication(this.planApplicationId).subscribe(\n        () => {\n          this.getAllPlanApplicationsByUserId(this.userId);\n          Swal.fire('Deleted!', 'Your plan has been deleted.', 'success');\n        },\n        (error) => {\n          console.error(\"Error deleting plan application:\", error);\n        }\n      );\n      this.closeDeletePopup();\n    }\n  }\n\n  closeDeletePopup(): void {\n    this.isDeletePopupOpen = false;\n    this.planToDelete = null;\n  }\n\n  closePopups(): void {\n    this.closeEditPopup();\n    this.closeDeletePopup();\n  }\n\n  isPending(status:string):boolean{\n    if(status==\"Pending\"){\n      return true;\n    }\n    return false;\n  }\n\n  getDocumentUrl(base64String: string): SafeResourceUrl {\n    const url = `data:application/pdf;base64,${base64String}`;\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n\n  sortAmountAsc(): void {\n    this.planApplications.sort((a, b) => a.AppliedAmount - b.AppliedAmount);\n  }\n\n  sortAmountDesc(): void {\n    this.planApplications.sort((a, b) => b.AppliedAmount - a.AppliedAmount);\n  }\n  isLoggedIn() {\n    return this.authService.isLoggedIn();\n  }\n}","\n<h2>Applied Plans</h2>\n<div *ngIf=\"isLoggedIn()\">\n    <app-usernav></app-usernav>\n    <div class=\"container\">\n        <table class=\"table table-striped\" *ngIf=\"planApplications.length > 0; else noRecordsFound\">\n            <thead>\n                <tr>\n                    <th>S. No</th>\n                    <th>Plan Name</th>\n                    <th class=\"sortable\">Applied Amount\n                        <span class=\"sort-icons\">\n                            <i (click)=\"sortAmountAsc()\" class=\"ascending\"></i>\n                            <i (click)=\"sortAmountDesc()\" class=\"descending\"></i>\n                        </span>\n                    </th>\n                    <th>Date Applied</th>\n                    <th>Remarks</th>\n                    <th>Status</th>\n                    <th>Username</th>\n                    <th>Proof of Document</th>\n                    <th>Action</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let planApplication of planApplications; index as i\">\n                    <td>{{ i + 1 }}</td>\n                    <td>{{ planApplication.SavingsPlan?.Name }}</td>\n                    <td>{{ planApplication.AppliedAmount }}</td>\n                    <td>{{ planApplication.ApplicationDate | date: 'dd-MM-yyyy' }}</td>\n                    <td>{{ planApplication.Remarks }}</td>\n                    <td>{{ planApplication.Status }}</td>\n                    <td>{{ planApplication.User?.Username }}</td>\n                    <td>\n                        <button class=\"view-button\" (click)=\"showPopup = true; popupImageSrc = '../../../' + planApplication.ProofDocument\">View</button>\n                    </td>\n                    <td>\n                        <button class=\"btn btn-danger\" (click)=\"confirmDelete(planApplication.PlanApplicationId)\" [disabled]=\"!isPending(planApplication.Status)\">Delete</button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n\n        <!-- Popup Modal -->\n        <div class=\"popup\" *ngIf=\"showPopup\">\n            <div class=\"popup-content\">\n                <span class=\"close\" (click)=\"showPopup = false\">×</span>\n                <img [src]=\"popupImageSrc\" alt=\"Document Proof\">\n            </div>\n        </div>\n\n        <!-- No Records Found -->\n        <ng-template #noRecordsFound>\n            <p>Oops! No records found</p>\n        </ng-template>\n\n        <div class=\"modal\" *ngIf=\"isDeletePopupOpen\">\n            <div class=\"modal-content\">\n                <h3>Confirm Delete</h3>\n                <p>Are you sure you want to delete this item?</p>\n                <button class=\"btn btn-danger\" (click)=\"deletePlan()\">Yes</button>\n                <button class=\"btn btn-secondary\" (click)=\"closeDeletePopup()\">No</button>\n            </div>\n        </div>\n    </div>\n</div>\n<div *ngIf=\"!isLoggedIn()\">\n    <app-error></app-error>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n\n\n\n  apiUrl:'https://8080-acdeaabcdbeacefbfbdfccbdceeaeedceeddeeaecdae.premiumproject.examly.io'\n}\n\n\n\n\n\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, OnDestroy, Optional } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\n \n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n\n  constructor(@Optional() private authService: AuthService) \n  {\n    if (!this.authService)\n    {\n      console.warn('AuthService is not provided!');\n    }\n  }\n\n  images = [\n    'assets/img1.jpg',\n    'assets/img1.jpg',\n    'assets/img2.jpg',\n    'assets/img3.jpg',\n  ];\n  currentIndex = 0;\n  intervalId: any;\n  userRole: string | null = '';\n \n  ngOnInit() {\n    this.userRole = localStorage.getItem('userRole');\n    // this.startAutoSlide();\n  }\n \n  ngOnDestroy() {\n    clearInterval(this.intervalId);\n  }\n \n  startAutoSlide() {\n    this.intervalId = setInterval(() => {\n      this.next();\n    }, 3000); // Change image every 2 seconds\n  }\n \n  getStarted() {\n    alert(\"Welcome to FinanceHub! Let's get started.\");\n  }\n \n  prev() {\n    this.currentIndex = (this.currentIndex > 0) ? this.currentIndex - 1 : this.images.length - 1;\n  }\n \n  next() {\n    this.currentIndex = (this.currentIndex < this.images.length - 1) ? this.currentIndex + 1 : 0;\n  }\n\n  isRegionalManager()\n  {\n    return localStorage.getItem('userRole')==='RegionalManager';\n  }\n\n  isCustomer()\n  {\n    return localStorage.getItem('userRole')==='Customer';\n  }\n  \n  isLoggedIn()\n  {\n    return this.authService.isLoggedIn();\n  }\n \n}\n","<app-managernav *ngIf=\"isLoggedIn() && isRegionalManager()\"></app-managernav>\n<app-usernav *ngIf=\"isLoggedIn() && isCustomer()\"></app-usernav>\n<app-navbar *ngIf=\"!isLoggedIn()\"></app-navbar>\n\n\n<div *ngIf=\"!isLoggedIn()\">\n</div>\n<body>\n    <div class=\"welcome-message\" id=\"welcomeMessage\">Welcome to Finance Hub!</div>\n    <section id=\"home\" class=\"hero\">\n        <div class=\"carousel\">\n            <div class=\"carousel-inner\">\n                <div class=\"carousel-item\">\n                    <img src=\"assets/home/1.jpg\" alt=\"Image 1\">\n                </div>\n                <div class=\"carousel-item\">\n                    <img src=\"assets/home/2.png\" alt=\"Image 2\">\n                </div>\n                <div class=\"carousel-item\">\n                    <img src=\"assets/home/3.jpg\" alt=\"Image 3\">\n                </div>\n            </div>\n\n        </div>\n        <!-- <div class=\"welcome-message\" id=\"welcomeMessage\">Welcome to Finance Hub!</div> -->\n    </section>\n    <div class=\"columns\">\n        <div class=\"column\">\n            <h2>Regional Manager</h2>\n            <ul>\n                <li>Effortless creation of accounts and secure log in</li>\n                <li>Secure and seamless management</li>\n                <li>Manage Savings Plans</li>\n                <li>Create, view, edit, or delete Savings Plans as needed</li>\n                <li>Review Customer Application forms and update them promtly</li>\n                <li>Monitor feedback and address customer concerns effectively</li>\n            </ul>\n        </div>\n        <div class=\"column\">\n            <h2>Customers</h2>\n            <ul>\n                <li>Register easily and log in securely</li>\n                <li>Explore savings plans</li>\n                <li>Conveniently apply for the Savings Plans that best suit your needs</li>\n                <li>Track application forms and delete those no longer needed</li>\n                <li>Submit feedback and review responses</li>\n            </ul>\n        </div>\n    </div>\n    <section id=\"small-images\" class=\"small-images\">\n        <div class=\"small-image\">\n\n            <img src=\"assets/home/s1.jpg\" alt=\"Small Image 1\">\n\n        </div>\n        <div class=\"small-image\">\n            <img src=\"assets/home/s2.jpg\" alt=\"Small Image 2\">\n        </div>\n        <div class=\"small-image\">\n            <img src=\"assets/home/s3.jpg\" alt=\"Small Image 3\">\n        </div>\n    </section>\n\n</body>\n\n\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SavingsPlan } from '../models/savingsplan.model';\nimport { PlanApplication } from '../models/planapplication.model';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SavingsplanService {\n\n  public apiUrl: string =environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  private getHeaders(): HttpHeaders {\n    const token = localStorage.getItem('authToken')\n    return new HttpHeaders({\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    });\n  }\n\n  getAllSavingsPlans(): Observable<SavingsPlan[]> {\n    return this.http.get<SavingsPlan[]>(`${this.apiUrl}/api/savingsplans`, { headers: this.getHeaders() })\n  }\n  getAppliedPlans(userId: number): Observable<PlanApplication[]> {\n    return this.http.get<PlanApplication[]>(`${this.apiUrl}/api/planapplications/user/${userId}`, { headers: this.getHeaders() })\n  }\n  deleteSavingsPlan(savingsPlanId: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/api/savingsplans/${savingsPlanId}`, { headers: this.getHeaders() })\n  }\n  getSavingsPlanById(Id: number): Observable<SavingsPlan> {\n    return this.http.get<SavingsPlan>(`${this.apiUrl}/api/savingsplans/${Id}`, { headers: this.getHeaders() })\n  }\n  addSavingsPlan(requestObject: SavingsPlan): Observable<SavingsPlan> {\n    return this.http.post<SavingsPlan>(`${this.apiUrl}/api/savingsplans`, requestObject, { headers: this.getHeaders() })\n  }\n  updateSavingsPlan(Id: number, requestObject: SavingsPlan): Observable<SavingsPlan> {\n    return this.http.put<SavingsPlan>(`${this.apiUrl}/api/savingsplans/${Id}`, requestObject, { headers: this.getHeaders() })\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { SavingsPlan } from 'src/app/models/savingsplan.model';\nimport { SavingsplanService } from 'src/app/services/savingsplan.service';\nimport Swal from 'sweetalert2';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-managereditsavingsplan',\n  templateUrl: './managereditsavingsplan.component.html',\n  styleUrls: ['./managereditsavingsplan.component.css']\n})\nexport class ManagereditsavingsplanComponent implements OnInit {\n\n  savingsPlanId: number;\n  savingsPlan: SavingsPlan = {\n    Name: '',\n    GoalAmount: 0,\n    TimeFrame: 0,\n    RiskLevel: 'Low',\n    Description: '',\n    Status: ''\n  };\n  showMessage: Boolean = false;\n\n  constructor(\n    private service: SavingsplanService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router, private authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    this.savingsPlanId = parseInt(this.activatedRoute.snapshot.paramMap.get(\"id\"), 10);\n    this.service.getSavingsPlanById(this.savingsPlanId).subscribe((data) => {\n      this.savingsPlan = data;\n      console.log(\"plan: \" + this.savingsPlan.Status);\n      if (this.savingsPlan.Status !== 'Active' && this.savingsPlan.Status !== 'Inactive') {\n        this.savingsPlan.Status = 'Inactive';\n      }\n    });\n  }\n\n  public updateSavingsPlan(form: NgForm) {\n    if (form.valid) {\n      if (this.savingsPlan.GoalAmount < 1000 || this.savingsPlan.GoalAmount > 10000000) {\n        Swal.fire({\n          title: 'Error!',\n          text: 'Goal Amount must be between 1,000 and 10,000,000.',\n          icon: 'error',\n          confirmButtonText: 'OK'\n        });\n        return;\n      }\n\n      if (this.savingsPlan.TimeFrame < 1 || this.savingsPlan.TimeFrame > 50) {\n        Swal.fire({\n          title: 'Error!',\n          text: 'Time Frame must be between 1 and 50 years.',\n          icon: 'error',\n          confirmButtonText: 'OK'\n        });\n        return;\n      }\n\n      console.log('Form is valid');\n      console.log('Sending data:', this.savingsPlan); // Log the data being sent\n      this.service.updateSavingsPlan(this.savingsPlanId, this.savingsPlan).subscribe(\n        (data) => {\n          console.log('Update successful', data);\n          Swal.fire({\n            title: 'Success!',\n            text: 'Savings plan successfully edited.',\n            icon: 'success',\n            confirmButtonText: 'OK'\n          }).then(() => {\n            this.router.navigate(['/viewsavingplan']);\n          });\n        },\n        (error) => {\n          console.error('Update failed', error);\n          Swal.fire({\n            title: 'Error!',\n            text: 'Plan with the same name already exists!',\n            icon: 'error',\n            confirmButtonText: 'OK'\n          });\n        }\n      );\n    } else {\n      console.log('Form is invalid');\n    }\n  }\n\n  public onClick() {\n    this.showMessage = false;\n    this.router.navigate(['/managerviewsavingsplan']);\n  }\n\n  isLoggedIn() {\n    return this.authService.isLoggedIn();\n  }\n}\n","<h2>Edit Savings Plan</h2>\n<div *ngIf=\"isLoggedIn()\">\n    <app-managernav></app-managernav>\n    \n    <div class=\"background-wrapper\">\n        <div class=\"container\">\n            <form #form=\"ngForm\" (ngSubmit)=\"updateSavingsPlan(form)\" novalidate>\n\n\n\n                <div class=\"form-group\">\n                    <input [(ngModel)]=\"savingsPlan.Name\" name=\"name\" type=\"text\" id=\"name\" class=\"form-control\" required pattern=\"^[a-zA-Z ]+$\" placeholder=\"Plan Name\">\n                    <label for=\"name\">Plan Name</label>\n                    <div *ngIf=\"form.submitted && form.controls.name?.errors\">\n                        <div *ngIf=\"form.controls.name?.errors.required\" class=\"error-message\">Name is required.</div>\n                        <div *ngIf=\"form.controls.name?.errors?.pattern\" class=\"error-message\">Plan Name must contain only letters.</div>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <input [(ngModel)]=\"savingsPlan.GoalAmount\" name=\"goalAmount\" type=\"number\" id=\"goalAmount\" class=\"form-control\" required min=\"1000\" max=\"10000000\" placeholder=\"Goal Amount\">\n                    <label for=\"goalAmount\">Goal Amount</label>\n                    <div *ngIf=\"form.submitted && form.controls.goalAmount?.errors\">\n                        <div *ngIf=\"form.controls.goalAmount?.errors.required\" class=\"error-message\">Goal Amount is required.</div>\n                        <div *ngIf=\"form.controls.goalAmount?.errors.min\" class=\"error-message\">Goal Amount must be at least 1,000.</div>\n                        <div *ngIf=\"form.controls.goalAmount?.errors.max\" class=\"error-message\">Goal Amount cannot exceed 10,000,000.</div>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <input [(ngModel)]=\"savingsPlan.TimeFrame\" name=\"timeFrame\" type=\"number\" id=\"timeFrame\" class=\"form-control\" required min=\"1\" max=\"50\" placeholder=\"Time Frame (years)\">\n                    <label for=\"timeFrame\">Time Frame (years)</label>\n                    <div *ngIf=\"form.submitted && form.controls.timeFrame?.errors\">\n                        <div *ngIf=\"form.controls.timeFrame?.errors.required\" class=\"error-message\">Time Frame is required.</div>\n                        <div *ngIf=\"form.controls.timeFrame?.errors.min\" class=\"error-message\">Time Frame must be at least 1 year.</div>\n                        <div *ngIf=\"form.controls.timeFrame?.errors.max\" class=\"error-message\">Time Frame cannot exceed 50 years.</div>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <select [(ngModel)]=\"savingsPlan.RiskLevel\" name=\"riskLevel\" id=\"riskLevel\" class=\"form-control\" required>\n                        <option value=\"\" disabled selected hidden>Risk Level</option>\n                        <option value=\"Low\">Low</option>\n                        <option value=\"Medium\">Medium</option>\n                        <option value=\"High\">High</option>\n                    </select>\n                    <div *ngIf=\"form.submitted && form.controls.riskLevel?.errors\">\n                        <div *ngIf=\"form.controls.riskLevel?.errors.required\" class=\"error-message\">Risk Level is required.</div>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <textarea [(ngModel)]=\"savingsPlan.Description\" name=\"description\" id=\"description\" class=\"form-control\" required placeholder=\"Description\"></textarea>\n                    <label for=\"description\">Description</label>\n                    <div *ngIf=\"form.submitted && form.controls.description?.errors\">\n                        <div *ngIf=\"form.controls.description?.errors.required\" class=\"error-message\">Description is required.</div>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <select [(ngModel)]=\"savingsPlan.Status\" name=\"status\" id=\"status\" class=\"form-control\" required>\n                        <option value=\"\" disabled selected hidden>Status</option>\n                        <option value=\"Active\">Active</option>\n                        <option value=\"Inactive\">Inactive</option>\n                    </select>\n                    <div *ngIf=\"form.submitted && form.controls.status?.errors\">\n                        <div *ngIf=\"form.controls.status?.errors.required\" class=\"error-message\">Status is required.</div>\n                    </div>\n                </div>\n                \n                <br>\n                <button class=\"btn btn-primary\" type=\"submit\">Submit</button>\n            </form>\n            <div *ngIf=\"showMessage\">\n                Successfully edited\n                <button (click)=\"onClick()\">OK</button>\n            </div>\n        </div>\n    </div>\n</div>\n<div *ngIf=\"!isLoggedIn()\">\n    <app-error></app-error>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Feedback } from 'src/app/models/feedback.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { FeedbackService } from 'src/app/services/feedback.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-user-add-feedback',\n  templateUrl: './useraddfeedback.component.html',\n  styleUrls: ['./useraddfeedback.component.css']\n})\nexport class UseraddfeedbackComponent implements OnInit {\n  addform: FormGroup;\n  feedback: Feedback = {\n    FeedbackId: 0,\n    UserId: 0,\n    Comments: '',\n    DateProvided: new Date(),\n  };\n\n  constructor(\n    private feedbackService: FeedbackService,\n    private builder: FormBuilder,\n    private router: Router,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    this.addform = this.builder.group({\n      feedbackText: this.builder.control(\"\", Validators.required)\n    });\n  }\n\n  addFeedback() {\n    if (this.addform.valid) {\n      this.feedback.UserId = +localStorage.getItem(\"userId\");\n      this.feedback.Comments = this.addform.value.feedbackText;\n      this.feedback.DateProvided = new Date();\n      console.log('Feedback to be sent:', this.feedback); // Log the feedback object\n\n      this.feedbackService.sendFeedback(this.feedback).subscribe((res) => {\n        console.log(res);\n        Swal.fire({\n          title: 'Success!',\n          text: 'Feedback added successfully.',\n          icon: 'success',\n          confirmButtonText: 'OK'\n        }).then(() => {\n          this.addform.reset(); // Reset the form\n          this.router.navigate(['/userviewfeedback']);\n        });\n      }, error => {\n        console.error('Error adding feedback:', error);\n        Swal.fire({\n          title: 'Error!',\n          text: 'There was an error adding the feedback.',\n          icon: 'error',\n          confirmButtonText: 'OK'\n        });\n      });\n    } else {\n      Swal.fire({\n        title: 'Warning!',\n        text: 'Please fill out the feedback text.',\n        icon: 'warning',\n        confirmButtonText: 'OK'\n      });\n    }\n  }\n\n  get feedbackText() {\n    return this.addform.get('feedbackText');\n  }\n\n  isLoggedIn() {\n    return this.authService.isLoggedIn();\n  }\n}\n","<h2>Add Feedback</h2>\n<div *ngIf=\"isLoggedIn()\">\n    <app-usernav></app-usernav>\n\n    <div class=\"container\">\n        <form [formGroup]=\"addform\" (ngSubmit)=\"addFeedback()\" class=\"form\">\n            <div class=\"text-center\">\n                <img src=\"assets/customer-feedback.png\" alt=\"Feedback Icon\" style=\"width: 70px; height: 70px; margin-bottom: 2px;\">\n            </div>\n            <textarea formControlName=\"feedbackText\" name=\"feedbackText\" id=\"feedbackText\" rows=\"10\" class=\"form-control\"></textarea>\n\n            <div *ngIf=\"feedbackText.invalid && feedbackText.touched\">\n                <div *ngIf=\"feedbackText.errors?.required\">\n                    <span class=\"error-message\">Feedback is Required.</span>\n                </div>\n            </div>\n\n            <div class=\"mt-3\">\n                <button type=\"submit\" [disabled]=\"addform.invalid\" class=\"btn btn-primary\">Submit</button>\n            </div>\n        </form>\n    </div>\n</div>\n<div *ngIf=\"!isLoggedIn()\">\n    <app-error></app-error>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Feedback } from 'src/app/models/feedback.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { FeedbackService } from 'src/app/services/feedback.service';\n\n@Component({\n  selector: 'app-userviewfeedback',\n  templateUrl: './userviewfeedback.component.html',\n  styleUrls: ['./userviewfeedback.component.css']\n})\nexport class UserviewfeedbackComponent implements OnInit {\n  viewfeedback: Feedback[] = [];\n  feedbackId: number;\n  userId: number;\n  delPopup: boolean = false;\n  feedbackToDel: Feedback | null = null;\n\n  constructor(\n    private service: FeedbackService,\n    private router: Router,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    this.userId = Number(localStorage.getItem('userId'));\n    console.log('User ID:', this.userId); // Log the userId to check its value\n    if (isNaN(this.userId)) {\n      console.error('Invalid user ID:', this.userId);\n      return;\n    }\n    this.getFeedbacksByUserId(this.userId);\n  }\n\n  public getFeedbacks(): void {\n    this.service.getFeedbacks().subscribe((data: Feedback[]) => {\n      this.viewfeedback = data;\n    });\n  }\n\n  public getFeedbacksByUserId(userId: number): void {\n    this.service.getAllFeedbacksByUserId(userId).subscribe((data: Feedback[]) => {\n      this.viewfeedback = data;\n    });\n  }\n\n  public deleteFeedback(): void {\n    if (this.feedbackToDel) {\n      this.service.deleteFeedback(this.feedbackToDel.FeedbackId).subscribe(() => {\n        this.getFeedbacksByUserId(this.userId);\n        this.delPopup = false;\n      });\n    }\n  }\n\n  public confirmDelete(id: number): void {\n    this.feedbackId = id;\n    this.delPopup = true;\n    this.feedbackToDel = this.viewfeedback.find(f => f.FeedbackId === id) || null;\n  }\n\n  public closeDel(): void {\n    this.delPopup = false;\n  }\n\n  isLoggedIn() {\n    return this.authService.isLoggedIn();\n  }\n\n  // Helper function to generate star rating HTML\n  public getStarRating(rating: number): string {\n    const maxRating = 5;\n    let stars = '';\n    for (let i = 0; i < maxRating; i++) {\n      stars += i < rating ? '★' : '☆'; // Filled and empty stars\n    }\n    return stars;\n  }\n}\n","<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>My Feedback Details</title>\n    <link href=\"https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&display=swap\" rel=\"stylesheet\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\" rel=\"stylesheet\">\n</head>\n<body>\n    <div *ngIf=\"isLoggedIn()\">\n        <app-usernav></app-usernav>\n        <h1 class=\"heading\">My Feedback Details</h1>\n        <div class=\"container\">\n            <table class=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th>Comments</th>\n                        <th>Date Provided</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let feedback of viewfeedback\">\n                        <td>{{ feedback.Comments }}</td>\n                        <td>{{ feedback.DateProvided | date: 'dd-MM-yyyy' }}</td>\n                        <td>\n                            <button class=\"btn btn-danger\" (click)=\"confirmDelete(feedback.FeedbackId)\">Delete</button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n\n            <!-- Delete Confirmation Modal -->\n            <div *ngIf=\"delPopup\" class=\"modal\">\n                <div class=\"modal-content\">\n                    <h3>Confirm Delete</h3>\n                    <p>Are you sure you want to delete this feedback?</p>\n                    <div class=\"button-container\">\n                        <button class=\"btn btn-danger\" (click)=\"deleteFeedback()\">Delete</button>\n                        <button class=\"btn btn-secondary\" (click)=\"closeDel()\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"!isLoggedIn()\">\n        <app-error></app-error>\n    </div>\n</body>\n</html>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angularapp';\n}\n","<!-- <router-outlet></router-outlet> -->\n<div class=\"wrapper\">\n  <div class=\"content\">\n    <app-home></app-home>\n    <router-outlet></router-outlet>\n  </div>\n  <footer class=\"footer\">\n      <div class=\"container\">\n\n          <p>© 2025 Finance Hub LTIM. All rights reserved.</p>\n\n        </div>\n  </footer>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SavingsPlan } from 'src/app/models/savingsplan.model';\nimport { SavingsplanService } from 'src/app/services/savingsplan.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2/dist/sweetalert2.all.min.js';\nimport { AuthService } from 'src/app/services/auth.service';\n \n@Component({\n  selector: 'app-managercreatesavingsplan',\n  templateUrl: './managercreatesavingsplan.component.html',\n  styleUrls: ['./managercreatesavingsplan.component.css']\n})\nexport class ManagercreatesavingsplanComponent implements OnInit {\n  form: FormGroup;\n  savingsPlan: SavingsPlan = {\n    Name: '',\n    GoalAmount: 0,\n    TimeFrame: 0,\n    RiskLevel: 'Low',\n    Description: '',\n    Status: ''\n  };\n  showMessage: Boolean = false;\n \n  constructor(private service: SavingsplanService, private formBuilder: FormBuilder, private router: Router, private authService: AuthService) { }\n \n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.pattern('^[a-zA-Z ]+$')]],\n      goalAmount: ['', [Validators.required, Validators.min(1000), Validators.max(10000000)]],\n      timeFrame: ['', [Validators.required, Validators.min(1), Validators.max(50)]],\n      riskLevel: ['', Validators.required],\n      description: ['', Validators.required],\n      status: ['', Validators.required]\n    });\n  }\n \n  public addSavingsPlan() {\n    // Normalize the name for duplicate checking\n    const originalName = this.form.value.name;\n    const normalizedName = originalName.replace(/\\s+/g, '').toLowerCase();\n \n    // Check for duplicates\n    this.service.getAllSavingsPlans().subscribe((existingPlans: SavingsPlan[]) => {\n      const isDuplicate = existingPlans.some(plan => plan.Name.replace(/\\s+/g, '').toLowerCase() === normalizedName);\n \n      if (isDuplicate) {\n        Swal.fire({\n          title: 'Error!',\n          text: 'A savings plan with the same name already exists.',\n          icon: 'error',\n          confirmButtonText: 'OK'\n        });\n      } else {\n        // Store the original name\n        this.savingsPlan = { ...this.form.value, Name: originalName };\n \n        this.service.addSavingsPlan(this.savingsPlan).subscribe(\n          () => {\n            Swal.fire({\n              title: 'Success!',\n              text: 'Savings plan successfully added.',\n              icon: 'success',\n              confirmButtonText: 'OK'\n            }).then(() => {\n              this.router.navigate(['/viewsavingplan']);\n            });\n            this.form.reset();\n          },\n          (error) => {\n            Swal.fire({\n              title: 'Error!',\n              text: 'An error occurred while adding the savings plan.',\n              icon: 'error',\n              confirmButtonText: 'OK'\n            });\n          }\n        );\n      }\n    });\n  }\n \n  public get name() {\n    return this.form.get('name');\n  }\n \n  public get goalAmount() {\n    return this.form.get('goalAmount');\n  }\n \n  public get timeFrame() {\n    return this.form.get('timeFrame');\n  }\n \n  public get riskLevel() {\n    return this.form.get('riskLevel');\n  }\n \n  public get description() {\n    return this.form.get('description');\n  }\n \n  public get status() {\n    return this.form.get('status');\n  }\n \n  isLoggedIn() {\n    return this.authService.isLoggedIn();\n  }\n}","<h2>Create New Savings Plan</h2>\n<div *ngIf=\"isLoggedIn()\">\n    <app-managernav></app-managernav>\n    \n    <div class=\"background-wrapper\">\n        <div class=\"container\">\n             \n            <form [formGroup]=\"form\" (ngSubmit)=\"addSavingsPlan()\">\n\n                <div class=\"form-group\">\n                    <input id=\"name\" formControlName=\"name\" required placeholder=\"Plan Name\">\n                    <label for=\"name\">Plan Name</label>\n                    <div *ngIf=\"name.invalid && (name.dirty || name.touched)\">\n                        <div *ngIf=\"name.errors?.required\" class=\"error-message\">Plan Name is required.</div>\n                        <div *ngIf=\"name.errors?.pattern\" class=\"error-message\">Plan Name must contain only letters.</div>\n                    </div>\n                </div>\n               \n                <div class=\"form-group\">\n                    <input id=\"goalAmount\" formControlName=\"goalAmount\" type=\"number\" required min=\"1000\" max=\"10000000\" placeholder=\"Goal Amount\">\n                    <label for=\"goalAmount\">Goal Amount</label>\n                    <div *ngIf=\"goalAmount.invalid && (goalAmount.dirty || goalAmount.touched)\">\n                        <div *ngIf=\"goalAmount.errors?.required\" class=\"error-message\">Goal Amount is required.</div>\n                        <div *ngIf=\"goalAmount.errors?.min\" class=\"error-message\">Goal Amount must be at least 1,000.</div>\n                        <div *ngIf=\"goalAmount.errors?.max\" class=\"error-message\">Goal Amount cannot exceed 10,000,000.</div>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <input id=\"timeFrame\" formControlName=\"timeFrame\" type=\"number\" required min=\"1\" max=\"50\" placeholder=\"Time Frame (years)\">\n                    <label for=\"timeFrame\">Time Frame (years)</label>\n                    <div *ngIf=\"timeFrame.invalid && (timeFrame.dirty || timeFrame.touched)\">\n                        <div *ngIf=\"timeFrame.errors?.required\" class=\"error-message\">Time Frame is required.</div>\n                        <div *ngIf=\"timeFrame.errors?.min\" class=\"error-message\">Time Frame must be at least 1 year.</div>\n                        <div *ngIf=\"timeFrame.errors?.max\" class=\"error-message\">Time Frame cannot exceed 50 years.</div>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <select id=\"riskLevel\" formControlName=\"riskLevel\" required>\n                        <option value=\"\" disabled selected hidden>Risk Level</option>\n                        <option value=\"Low\">Low</option>\n                        <option value=\"Medium\">Medium</option>\n                        <option value=\"High\">High</option>\n                    </select>\n                    <div *ngIf=\"riskLevel.invalid && (riskLevel.dirty || riskLevel.touched)\">\n                        <div *ngIf=\"riskLevel.errors?.required\" class=\"error-message\">Risk Level is required.</div>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <select id=\"status\" formControlName=\"status\" required>\n                        <option value=\"\" disabled selected hidden>Status</option>\n                        <option value=\"Active\">Active</option>\n                        <option value=\"Inactive\">Inactive</option>\n                    </select>\n                    <div *ngIf=\"status.invalid && (status.dirty || status.touched)\">\n                        <div *ngIf=\"status.errors?.required\" class=\"error-message\">Status is required.</div>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <textarea id=\"description\" formControlName=\"description\" required placeholder=\"Description\"></textarea>\n                    <label for=\"description\">Description</label>\n                    <div *ngIf=\"description.invalid && (description.dirty || description.touched)\">\n                        <div *ngIf=\"description.errors?.required\" class=\"error-message\">Description is required.</div>\n                    </div>\n                </div>\n\n                <button type=\"submit\" [disabled]=\"form.invalid\">Create Savings Plan</button>\n            </form>\n\n            <div *ngIf=\"showMessage\" class=\"showMessage\">\n                <p>Savings plan successfully added!</p>\n                <button (click)=\"onOkClick()\">OK</button>\n            </div>\n        </div>\n    </div>\n</div>\n<div *ngIf=\"!isLoggedIn()\">\n    <app-error></app-error>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-usernav',\n  templateUrl: './usernav.component.html',\n  styleUrls: ['./usernav.component.css']\n})\nexport class UsernavComponent implements OnInit {\n  name: any = localStorage.getItem('userName');\n\n  constructor(private auth: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  logout() {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, log out!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.auth.logout();\n        this.router.navigate(['/login']);\n        Swal.fire({\n          title: 'Success!',\n          text: 'Logged Out!!!',\n          icon: 'success',\n          confirmButtonText: 'OK'\n        })\n      }\n    });\n  }\n}","<div class=\"nav-container\">\n    <div class=\"logo\">\n        <!-- <a style=\"cursor: pointer;\" routerLink=\"/home\">FINANCE HUB</a> -->\n        <a routerLink=\"/home\" style=\"display: flex; align-items: center; text-decoration: none;\">\n            <img src=\"assets/navbar/Logo.jpg\" alt=\"Finance Hub Logo\" class=\"logo-img\" />\n            <span style=\"margin-left: 10px;\">FINANCE HUB</span>\n        </a>\n    </div>\n    <div class=\"menu\">\n        <span class=\"border border-black text-white btn-sm nav-link\">{{name}} / Customer</span>\n        \n        <a style=\"cursor: pointer; padding-right: 20px;\" routerLink=\"/home\">Home</a>\n        <div class=\"dropdown\">\n            <a style=\"cursor: pointer; padding-right: 20px;\">Savings Plans</a>\n            <div class=\"dropdown-content\">\n                <!-- <a routerLink=\"/addsavingplan\">Add Saving Plan</a> -->\n                <a routerLink=\"/userviewsavingsplan\">View Savings Plans</a>\n            </div>\n        </div>\n        <a style=\"cursor: pointer; padding-right: 20px;\" routerLink=\"/userappliedplans\">Applied Plans</a>\n\n        <div class=\"dropdown\">\n            <a style=\"cursor: pointer; padding-right: 20px;\">Feedback</a>\n            <div class=\"dropdown-content\">\n                <a routerLink=\"/useraddfeedback\">Add Feedback</a>\n                <a routerLink=\"/userviewfeedback\">My Feedbacks</a>\n            </div>\n        </div>\n        <button style=\"background-color: rgba(255, 0, 0, 0.774); color: white;\" (click)=\"logout()\">Logout</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Login } from 'src/app/models/login.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  login: Login = {\n    Email: '',\n    Password: ''\n  }\n  \n  checkEmailandPassword: boolean = false;\n  role: string = '';\n  hidePassword: boolean = true;\n\n  constructor(private authService:AuthService, private router:Router) { }\n\n  ngOnInit(): void {}\n\n  togglePasswordVisibility() {\n    this.hidePassword = !this.hidePassword;\n  }\n\n  addlogin() {\n    this.authService.login(this.login).subscribe((res)=>{\n      console.log(res);\n      localStorage.setItem(\"authToken\", res.token);\n      this.authService.isRole();\n      this.role=localStorage.getItem('userRole').toLowerCase();\n      console.log(this.role);\n      this.router.navigate([`home`]);\n      Swal.fire({\n        title: 'Success!',\n        text: 'Login Successful!',\n        icon: 'success',\n        timer: 1500,\n        showConfirmButton: false\n      });\n    },\n    error=>{\n      this.checkEmailandPassword=true;\n      Swal.fire({\n        title: 'Error!',\n        text: 'Login Failed. Please try again.',\n        icon: 'error',\n        timer: 1500,\n        showConfirmButton: false\n      });\n    })\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"background-wrapper\">\n    <div class=\"container\">\n        <form #loginform=\"ngForm\" (ngSubmit)=\"addlogin()\">\n            <div class=\"panel panel-primary\">\n                <div class=\"panel-heading\">\n                    <h2>Login</h2>\n                </div>\n                <div class=\"panel-body\">\n                    <!-- Email field -->\n                    <div class=\"form-group\">\n                        <input type=\"text\" \n                               name=\"email\" \n                               id=\"email\" \n                               [(ngModel)]=\"login.Email\" \n                               class=\"form-control\" \n                               #em=\"ngModel\" \n                               required \n                               pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\" \n                               placeholder=\"Email\">\n                        <label for=\"email\">Email<span class=\"asterisk\" style=\"color: red;\">*</span></label>\n                        <div class=\"error-message\" *ngIf=\"em.errors?.required && (em.touched || em.dirty)\">\n                            <p class=\"text-danger\">*Email is required</p>\n                        </div>\n                        <div class=\"error-message\" *ngIf=\"em.errors?.pattern\">\n                            <p class=\"text-danger\">*Please enter a valid email address</p>\n                        </div>\n                    </div>\n\n                    <!-- Password field -->\n                    <div class=\"form-group\">\n                        <div class=\"password-field\">\n                            <input [type]=\"hidePassword ? 'password' : 'text'\" \n                                   name=\"password\" \n                                   id=\"password\" \n                                   [(ngModel)]=\"login.Password\" \n                                   class=\"form-control\" \n                                   #pass=\"ngModel\" \n                                   required \n                                   placeholder=\"Password\">\n                            <i class=\"toggle-password fas\" \n                               [class.fa-eye]=\"hidePassword\" \n                               [class.fa-eye-slash]=\"!hidePassword\" \n                               (click)=\"togglePasswordVisibility()\">\n                            </i>\n                        </div>\n                        <label for=\"password\">Password<span class=\"asterisk\" style=\"color: red;\">*</span></label>\n                        <div class=\"error-message\" *ngIf=\"pass.errors?.required && (pass.touched || pass.dirty)\">\n                            <p class=\"text-danger\">*Password is required</p>\n                        </div>\n                    </div>\n\n                    <!-- Button section -->\n                    <div class=\"panel-footer\">\n                        <div class=\"form-group\" *ngIf=\"loginform.invalid\">\n                            <button class=\"form-control btn btn-secondary\" disabled>Login</button>\n                        </div>\n                        <div class=\"form-group\" *ngIf=\"!loginform.invalid\">\n                            <button class=\"form-control btn btn-success\">Login</button>\n                        </div>\n                    </div>\n                    <p class=\"text-center\">Don't have an account? <a routerLink=\"/register\" class=\"custom-link\">Register here</a></p>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { PlanApplication } from 'src/app/models/planapplication.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { PlanapplicationformService } from 'src/app/services/planapplicationform.service';\nimport { SavingsPlan } from 'src/app/models/savingsplan.model';\n\n@Component({\n  selector: 'app-managerviewapplicationform',\n  templateUrl: './managerviewapplicationform.component.html',\n  styleUrls: ['./managerviewapplicationform.component.css']\n})\nexport class ManagerviewapplicationformComponent implements OnInit {\n  constructor(private planApplicationformService: PlanapplicationformService, private sanitizer: DomSanitizer, private authService: AuthService) { }\n  \n  newStatus: string;\n  planApplications: PlanApplication[] = [];\n  filteredPlanApplications: PlanApplication[] = [];\n  showPopup: boolean = false;\n  searchPlanName: string = '';\n\n  ngOnInit(): void {\n    this.getAllPlanApplications();\n  }\n  \n  getAllPlanApplications() {\n    this.planApplicationformService.getAllPlanApplications().subscribe((data) => {\n      this.planApplications = data.map(application => ({\n        ...application,\n        SavingsPlan: application.SavingsPlan || {} as SavingsPlan // Ensure SavingsPlan is defined\n      }));\n      this.filteredPlanApplications = this.planApplications;\n      console.log(\"getall in comp \", this.planApplications);\n    });\n  }\n\n  sortAmountAscending() {\n    this.filteredPlanApplications = [...this.filteredPlanApplications.sort((a, b) => a.AppliedAmount - b.AppliedAmount)];\n  }\n\n  sortAmountDescending() {\n    this.filteredPlanApplications = [...this.filteredPlanApplications.sort((a, b) => b.AppliedAmount - a.AppliedAmount)];\n  }\n\n  filterApplicationsByPlanName() {\n    if (this.searchPlanName.trim()) {\n      this.filteredPlanApplications = this.planApplications.filter(app => app.SavingsPlan?.Name?.toLowerCase().includes(this.searchPlanName.toLowerCase()));\n    } else {\n      this.filteredPlanApplications = [...this.planApplications];\n    }\n  }\n\n  status: boolean;\n  \n  approve(planApplication: PlanApplication) {\n    if (planApplication.Status === 'Pending') {\n      planApplication.Status = 'Approved';\n      console.log(planApplication.Status);\n      this.planApplicationformService.updatePlanApplication(planApplication.PlanApplicationId, planApplication).subscribe((data: any) => {\n        this.getAllPlanApplications();\n        this.newStatus = planApplication.Status;\n      });\n    }\n  }\n\n  reject(planApplication: PlanApplication) {\n    if (planApplication.Status === 'Pending') {\n      planApplication.Status = 'Rejected';\n      console.log(planApplication.Status);\n      this.planApplicationformService.updatePlanApplication(planApplication.PlanApplicationId, planApplication).subscribe((data: any) => {\n        this.getAllPlanApplications();\n        this.newStatus = planApplication.Status;\n      });\n    }\n  }\n\n  getDocumentUrl(base64String: string): SafeResourceUrl {\n    const url = `data:application/pdf;base64,${base64String}`;\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n\n  isLoggedIn() {\n    return this.authService.isLoggedIn();\n  }\n}","<div *ngIf=\"isLoggedIn()\">\n    <app-managernav></app-managernav>\n    <div class=\"background-wrapper\">\n      <div class=\"container\">\n        <h1>Requested Application Forms</h1>\n        <table class=\"table table-striped\">\n          <thead>\n            <tr class=\"no-border-bottom\">\n              <th colspan=\"8\" style=\"text-align: center;\">\n                <input type=\"text\" class=\"search-bar\" placeholder=\"Search by Plan Name\" [(ngModel)]=\"searchPlanName\" (input)=\"filterApplicationsByPlanName()\">\n              </th>\n            </tr>\n            <tr>\n              <th>S. No</th>\n              <th>Applicant Name</th>\n              <th>Plan Name</th>\n              <th>Applied Amount\n                <span class=\"sort-btn-container\">\n                  <button class=\"sort-btn\" (click)=\"sortAmountAscending()\">&#9660;</button>\n                  <button class=\"sort-btn\" (click)=\"sortAmountDescending()\">&#9650;</button>\n                </span>\n              </th>\n              <th>Application Date</th>\n              <th>Remarks</th>\n              <th>Status</th>\n              <th>Proof of document</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let planApplication of filteredPlanApplications; let i = index\">\n              <td>{{i + 1}}</td>\n              <td>{{planApplication.User?.Username}}</td>\n              <td>{{planApplication.SavingsPlan?.Name}}</td>\n              <td>{{planApplication.AppliedAmount | currency:'INR':'symbol':'1.0-0' }}</td>\n              <td>{{planApplication.ApplicationDate | date:'dd-MM-yyyy'}}</td>\n              <td>{{planApplication.Remarks}}</td>\n              <td>\n                <div *ngIf=\"planApplication.Status === 'Pending'\" class=\"action-buttons\">\n                  <button class=\"approve-button\" (click)=\"approve(planApplication)\">Approve</button>\n                  <button class=\"reject-button\" (click)=\"reject(planApplication)\">Reject</button>\n                </div>\n                <div *ngIf=\"planApplication.Status !== 'Pending'\">\n                  <span [ngClass]=\"{ 'approved-status': planApplication.Status === 'Approved', 'rejected-status': planApplication.Status === 'Rejected' }\">\n                    {{planApplication.Status}}\n                  </span>\n                </div>\n              </td>\n              <td>\n                <button class=\"view-button\" (click)=\"showPopup = true; popupImageSrc = '../../../' + planApplication.ProofDocument\">View</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    <!-- Popup Modal -->\n    <div class=\"popup\" *ngIf=\"showPopup\">\n      <div class=\"popup-content\">\n        <span class=\"close\" (click)=\"showPopup = false\">×</span>\n        <img [src]=\"popupImageSrc\" alt=\"Document Proof\">\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"!isLoggedIn()\">\n    <app-error></app-error>\n  </div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n\n// @NgModule({\n//   declarations: [\n//     AppComponent\n\n\nimport { ErrorComponent } from './components/error/error.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ManagercreatesavingsplanComponent } from './components/managercreatesavingsplan/managercreatesavingsplan.component';\nimport { ManagereditsavingsplanComponent } from './components/managereditsavingsplan/managereditsavingsplan.component';\nimport { ManagernavComponent } from './components/managernav/managernav.component';\nimport { ManagerviewapplicationformComponent } from './components/managerviewapplicationform/managerviewapplicationform.component';\nimport { ManagerviewfeedbackComponent } from './components/managerviewfeedback/managerviewfeedback.component';\nimport { ManagerviewsavingsplanComponent } from './components/managerviewsavingsplan/managerviewsavingsplan.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { RegistrationComponent } from './components/registration/registration.component';\nimport { UseraddfeedbackComponent } from './components/useraddfeedback/useraddfeedback.component';\nimport { UserappliedplansComponent } from './components/userappliedplans/userappliedplans.component';\nimport { UsernavComponent } from './components/usernav/usernav.component';\nimport { UserplanapplicationformComponent } from './components/userplanapplicationform/userplanapplicationform.component';\nimport { UserviewfeedbackComponent } from './components/userviewfeedback/userviewfeedback.component';\nimport { UserviewsavingsplanComponent } from './components/userviewsavingsplan/userviewsavingsplan.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ErrorComponent,\n    HomeComponent,\n    LoginComponent,\n    ManagercreatesavingsplanComponent,\n    ManagereditsavingsplanComponent,\n    ManagernavComponent,\n    ManagerviewapplicationformComponent,\n    ManagerviewfeedbackComponent,\n    ManagerviewsavingsplanComponent,\n    NavbarComponent,\n    RegistrationComponent,\n    UseraddfeedbackComponent,\n    UserappliedplansComponent,\n    UsernavComponent,\n    UserplanapplicationformComponent,\n    UserviewfeedbackComponent,\n    UserviewsavingsplanComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { SavingsPlan } from '../../models/savingsplan.model';\nimport { SavingsplanService } from '../../services/savingsplan.service';\nimport { PlanapplicationformService } from 'src/app/services/planapplicationform.service';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-userviewsavingsplan',\n  templateUrl: './userviewsavingsplan.component.html',\n  styleUrls: ['./userviewsavingsplan.component.css']\n})\nexport class UserviewsavingsplanComponent implements OnInit {\n  name: string = '';\n  savingsPlans: SavingsPlan[] = [];\n  isApplied: boolean[] = []; \n  sortColumn: string = '';\n  sortDirection: string = 'asc'; // 'asc' for ascending, 'desc' for descending\n  riskLevel: string = 'All'; // Default value for dropdown\n\n  constructor(\n    private service: SavingsplanService,\n    private planappservice: PlanapplicationformService,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    this.getAllSavingsPlans();\n    this.checkApplications();\n  }\n\n  public getAllSavingsPlans() {\n    this.service.getAllSavingsPlans().subscribe((data) => {\n      console.log(\"Savings Plans:\", data); // Debugging line\n      this.savingsPlans = data;\n      this.checkApplications();\n    });\n  }\n\n  public filterByName(name: string) {\n    if (name === \"\") {\n      this.getAllSavingsPlans();\n    } else {\n      this.service.getAllSavingsPlans().subscribe((data) => {\n        console.log(\"Filtered Plans by Name:\", data); // Debugging line\n        const searchTerm = name.toLowerCase();\n        this.savingsPlans = data.filter(p =>\n          p.Name.toLowerCase().includes(searchTerm) ||\n          p.GoalAmount.toString().toLowerCase().includes(searchTerm) ||\n          p.TimeFrame.toString().toLowerCase().includes(searchTerm) ||\n          p.RiskLevel.toLowerCase().includes(searchTerm) ||\n          p.Description.toLowerCase().includes(searchTerm) ||\n          p.Status.toLowerCase().includes(searchTerm)\n        );\n        console.log(\"Filtered Results:\", this.savingsPlans); // Debugging line\n        this.checkApplications();\n      });\n    }\n  }\n  \n\n  isLoggedIn() {\n    return this.authService.isLoggedIn();\n  }\n\n  public checkApplications() {\n    const userId = localStorage.getItem('userId');\n    if (userId) {\n      this.savingsPlans.forEach((plan, index) => {\n        this.planappservice.getPlanApplicationsBySavingsPlanIdAndUserId(plan.SavingsPlanId, +userId).subscribe((applications) => {\n          this.isApplied[index] = applications.length > 0;\n        });\n      });\n    } else {\n      console.error('User ID not found in local storage');\n    }\n  }\n\n  sortTable(column: string) {\n    if (this.sortColumn === column) {\n      this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.sortColumn = column;\n      this.sortDirection = 'asc';\n    }\n\n    this.savingsPlans.sort((a, b) => {\n      if (a[column] < b[column]) {\n        return this.sortDirection === 'asc' ? -1 : 1;\n      } else if (a[column] > b[column]) {\n        return this.sortDirection === 'asc' ? 1 : -1;\n      } else {\n        return 0;\n      }\n    });\n  }\n\n  getSortIcon(column: string): string {\n    if (this.sortColumn === column) {\n      return this.sortDirection === 'asc' ? 'ascending' : 'descending';\n    }\n    return '';\n  }\n\n  public filterByRiskLevel() {\n    this.service.getAllSavingsPlans().subscribe((data) => {\n      if (this.riskLevel === 'All') {\n        this.savingsPlans = data;\n      } else {\n        this.savingsPlans = data.filter(p => p.RiskLevel === this.riskLevel);\n      }\n      console.log(\"Filtered Plans by Risk Level:\", this.savingsPlans); // Debugging line\n      this.checkApplications();\n    });\n  }\n}\n","<!doctype html>\n<html lang=\"en\">\n<head>\n\n  <h1 class=\"heading font-dancing-script\">Available Savings Plans</h1>\n\n\n \n\n\n<meta charset=\"utf-8\">\n<base href=\"/\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<!-- <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\"> -->\n<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n</head>\n<body>\n  <div *ngIf=\"isLoggedIn()\">\n    <app-usernav></app-usernav>\n    <div class=\"text-center\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"fname\" class=\"search-label\">\n        <i class=\"fa fa-search\"></i>\n      </label>\n      <input #fname type=\"text\" name=\"fname\" id=\"fname\" class=\"form-control search-bar\" placeholder=\"Search Plan...\" (input)=\"filterByName(fname.value)\" [(ngModel)]=\"name\">\n    </div>\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-6 mb-4\" *ngFor=\"let savingsPlan of savingsPlans; index as i\">\n          <div class=\"savings-plan-card-container\">\n            <div class=\"card savings-plan-card\">\n              <div class=\"card-body\">\n                <h5 class=\"card-title\">{{savingsPlan.Name}}</h5>\n                <p class=\"card-text\">Goal Amount: {{savingsPlan.GoalAmount | currency:'INR':'symbol':'1.0-0'}}</p>\n                <p class=\"card-text\">Time Frame: {{savingsPlan.TimeFrame}} years</p>\n                <p class=\"card-text\">Risk Level: {{savingsPlan.RiskLevel}}</p>\n                <p class=\"card-text\">Description: {{savingsPlan.Description}}</p>\n                <p class=\"card-text\">Status: {{savingsPlan.Status}}</p>\n                <button class=\"btn\" [ngClass]=\"isApplied[i] ? 'btn-success' : 'btn-primary'\" [routerLink]=\"['/userplanapplication', savingsPlan.SavingsPlanId]\" [disabled]=\"isApplied[i] || savingsPlan.Status === 'Inactive'\">\n                  {{ isApplied[i] ? 'Applied' : 'Apply' }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"!isLoggedIn()\">\n    <app-error></app-error>\n  </div>\n  \n</body>\n</html>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/models/user.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n  newUser: User = {\n    Email: \"\",\n    Password: \"\",\n    Username: \"\",\n    MobileNumber: \"\",\n    UserRole: \"\"\n  }\n\n  err: string = \"\";\n  showPassword: boolean = false;\n  confirmPassword: string = \"\";\n  checkUserExists: boolean = false;\n  pdfTermsAccepted: boolean = false;\n  regionalManagerCode = '0000';\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void { }\n\n  register() {\n    if (!this.pdfTermsAccepted) {\n      Swal.fire({\n        title: 'Terms Required',\n        text: 'Please accept the terms and conditions to proceed',\n        icon: 'warning',\n        timer: 1500,\n        showConfirmButton: false\n      });\n      return;\n    }\n\n    const userRole = this.newUser.UserRole;\n\n    if (userRole === 'RegionalManager') {\n      Swal.fire({\n        title: 'Enter the code',\n        input: 'text',\n        inputLabel: 'Please enter the code for Regional Manager',\n        inputValidator: (value) => {\n          if (!value) {\n            return 'You need to enter a code!';\n          } else if (value !== this.regionalManagerCode) {\n            return 'Invalid code!';\n          }\n        },\n        showCancelButton: true,\n        confirmButtonText: 'Submit',\n      }).then((result) => {\n        if (result.isConfirmed) {\n          this.completeRegistration();\n        }\n      });\n    } else {\n      this.completeRegistration();\n    }\n  }\n\n  completeRegistration() {\n    this.authService.register(this.newUser).subscribe(\n      (res) => {\n        console.log(res);\n        Swal.fire({\n          title: 'Success!',\n          text: 'Registration Successful!',\n          icon: 'success',\n          timer: 1500,\n          showConfirmButton: false\n        }).then(() => {\n          this.router.navigate(['/login']);\n        });\n      },\n      (error) => {\n        this.checkUserExists = true;\n        this.err = error.error;\n        Swal.fire({\n          title: 'Error!',\n          text: 'Registration Failed. Please try again.',\n          icon: 'error',\n          timer: 1500,\n          showConfirmButton: false\n        });\n      }\n    );\n  }\n}","<app-navbar></app-navbar>\n<div class=\"background-wrapper\">\n    <div class=\"container\">\n        <form #registerform=\"ngForm\" (ngSubmit)=\"register()\">\n            <div class=\"panel panel-primary\">\n                <div class=\"panel-heading\">\n                    <h2>Registration</h2>\n                </div>\n                <div class=\"panel-body\">\n                    <div class=\"form-group\">\n                        <input type=\"text\" placeholder=\"Username\" name=\"userName\" id=\"userName\" [(ngModel)]=\"newUser.Username\" class=\"form-control\" #un=\"ngModel\" required pattern=\"^(?=.*[a-zA-Z])[a-zA-Z0-9]*$\">\n                        <label for=\"userName\">Username</label>\n                        <div class=\"error-message\" *ngIf=\"un.errors?.required && (un.touched || un.dirty)\">\n                            <p class=\"text-danger\">Username is required</p>\n                        </div>\n                        <div class=\"error-message\" *ngIf=\"un.errors?.pattern\">\n                            <p class=\"text-danger\">Username must contain letters</p>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <input type=\"text\" placeholder=\"Email\" name=\"email\" id=\"email\" [(ngModel)]=\"newUser.Email\" class=\"form-control\" #em=\"ngModel\" required pattern=\"^[\\w.-]+@[\\w.-]+\\.\\w{2,3}$\"\n                        >\n                        <label for=\"email\">Email</label>\n                        <div class=\"error-message\" *ngIf=\"em.errors?.required && (em.touched || em.dirty)\">\n                            <p class=\"text-danger\">Email is required</p>\n                        </div>\n                        <div class=\"error-message\" *ngIf=\"em.errors?.pattern\">\n                            <p class=\"text-danger\">Please enter a valid email</p>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <div class=\"input-container\">\n                            <input type=\"password\" placeholder=\"Password\" name=\"password\" id=\"password\" [(ngModel)]=\"newUser.Password\" class=\"form-control\" #pass=\"ngModel\" required pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$\">\n                            <label for=\"password\">Password</label>\n                        </div>\n                        <div class=\"error-message\" *ngIf=\"pass.errors?.required && (pass.touched || pass.dirty)\">\n                            <p class=\"text-danger\">Password is required</p>\n                        </div>\n                        <div class=\"error-message\" *ngIf=\"pass.errors?.pattern\">\n                            <p class=\"text-danger\">Password must include at least one lowercase, one uppercase, one digit, and one special character with a minimum length of 8 characters</p>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <input type=\"password\" placeholder=\"Confirm Password\" name=\"confirmPassword\" id=\"confirmPassword\" [(ngModel)]=\"confirmPassword\" class=\"form-control\" #cpass=\"ngModel\" required>\n                        <label for=\"confirmPassword\">Confirm Password</label>\n                        <div class=\"error-message\" *ngIf=\"cpass.errors?.required && (cpass.touched || cpass.dirty)\">\n                            <p class=\"text-danger\">Confirm Password is required</p>\n                        </div>\n                        <div class=\"error-message\" *ngIf=\"confirmPassword !== pass.value\">\n                            <p class=\"text-danger\">Passwords do not match!</p>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <input type=\"tel\" placeholder=\"Mobile Number\" name=\"mobileNumber\" id=\"mobileNumber\" [(ngModel)]=\"newUser.MobileNumber\" class=\"form-control\" #mn=\"ngModel\" minlength=\"10\" maxlength=\"10\" required pattern=\"[0-9]{10}\">\n                        <label for=\"mobileNumber\">Mobile Number</label>\n                        <div class=\"error-message\" *ngIf=\"mn.errors?.required && (mn.touched || mn.dirty)\">\n                            <p class=\"text-danger\">Mobile Number is required</p>\n                        </div>\n                        <div class=\"error-message\" *ngIf=\"mn.errors?.minlength || mn.errors?.maxlength\">\n                            <p class=\"text-danger\">Mobile Number must have 10 digits</p>\n                        </div>\n                        <div class=\"error-message\" *ngIf=\"mn.errors?.pattern && (mn.touched || mn.dirty)\">\n                            <p class=\"text-danger\">Mobile Number must contain only numbers</p>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <select name=\"role\" id=\"role\" [(ngModel)]=\"newUser.UserRole\" #ur=\"ngModel\" class=\"form-control\" required>\n                            <option value=\"\" hidden selected disabled>Select a Role</option>\n                            <option value=\"RegionalManager\">Regional Manager</option>\n                            <option value=\"Customer\">Customer</option>\n                        </select>\n                        <label for=\"role\">Role</label>\n                        <div class=\"error-message\" *ngIf=\"ur.errors?.required && (ur.touched || ur.dirty)\">\n                            <p class=\"text-danger\">Role is required</p>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group terms-section\">\n                        <div class=\"terms-checkbox-container\">\n                            <input \n                                type=\"checkbox\" \n                                id=\"pdfTermsCheckbox\" \n                                [(ngModel)]=\"pdfTermsAccepted\" \n                                name=\"pdfTermsCheckbox\"\n                                required>\n                            <label for=\"pdfTermsCheckbox\" class=\"checkbox-label\">\n                                I have read and agree to the \n                                <a href=\"assets/pdfs/PrivacyPolicy.pdf\" target=\"_blank\">Terms and Conditions</a>\n                            </label>\n                        </div>\n                    </div>\n\n                    <div class=\"panel-footer\">\n                        <div class=\"form-group\" *ngIf=\"registerform.invalid || !pdfTermsAccepted\">\n                            <button class=\"form-control btn btn-default\" disabled>Register</button>\n                        </div>\n                        <div class=\"form-group\" *ngIf=\"!registerform.invalid && pdfTermsAccepted\">\n                            <button class=\"form-control btn btn-success\">Register</button>\n                        </div>\n                        <div class=\"error-message\" *ngIf=\"checkUserExists && registerform.submitted\">\n                            <p class=\"text-danger\">*{{err}}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SavingsPlan } from 'src/app/models/savingsplan.model';\nimport { SavingsplanService } from 'src/app/services/savingsplan.service';\nimport { ActivatedRoute } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { Injectable } from '@angular/core';\nimport { AuthGuard } from '../authguard/auth.guard';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-managerviewsavingsplan',\n  templateUrl: './managerviewsavingsplan.component.html',\n  styleUrls: ['./managerviewsavingsplan.component.css']\n})\nexport class ManagerviewsavingsplanComponent implements OnInit {\n  savingsPlanId: number;\n  savingsPlan: SavingsPlan = {\n    Name: '',\n    GoalAmount: 0,\n    TimeFrame: 0,\n    RiskLevel: 'Low',\n    Description: '',\n    Status: ''\n  };\n  savingsPlans: SavingsPlan[] = [];\n  showMessage: Boolean = false;\n\n\n  constructor(private service: SavingsplanService, private activatedRoute: ActivatedRoute, private router: Router, private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.savingsPlanId = parseInt(this.activatedRoute.snapshot.params['id']);\n    this.service.getSavingsPlanById(this.savingsPlanId).subscribe((data) => {\n      this.savingsPlan = data;\n      console.log(data);\n\n    });\n    this.getAllSavingsPlans();\n  }\n\n  public getAllSavingsPlans() {\n    this.service.getAllSavingsPlans().subscribe((data) => { this.savingsPlans = data })\n  }\n  public updateSavingsPlan(savingsPlanID) {\n    this.router.navigate([`/managereditsavingsplan/${savingsPlanID}`]);\n  }\n\n  public deleteSavingsPlan(id: number) {\n    this.service.deleteSavingsPlan(id).subscribe(() => {\n      this.getAllSavingsPlans();\n    })\n  }\n\n  confirmDelete(savingsPlan: any) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.deleteSavingsPlan(savingsPlan.SavingsPlanId);\n        Swal.fire(\n          'Deleted!',\n          'Your savings plan has been deleted.',\n          'success'\n        );\n      }\n    });\n  }\n\n  isLoggedIn() {\n    return this.authService.isLoggedIn();\n  }\n\n}\n","<div *ngIf=\"isLoggedIn()\">\n    <app-managernav></app-managernav>\n    \n    <div class=\"background-wrapper\">\n        <div class=\"container\">\n            <h1>Savings Plans</h1>\n            <table class=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th>S. No</th>\n                        <th>Plan Name</th>\n                        <th>Goal Amount</th>\n                        <th>Time Frame (Years)</th>\n                        <th>Risk Level</th>\n                        <th>Description</th>\n                        <th>Status</th>\n                        <th class=\"action-header\">Action</th> \n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let savingsPlan of savingsPlans; index as i\">\n                        <td class=\"right-align\">{{i + 1}}</td>\n                        <td>{{savingsPlan.Name}}</td>\n                        <td class=\"right-align\">{{savingsPlan.GoalAmount | currency:'INR':'symbol':'1.0-0'}}</td>\n                        <td class=\"right-align\">{{savingsPlan.TimeFrame}}</td>\n                        <td>{{savingsPlan.RiskLevel}}</td>\n                        <td>{{savingsPlan.Description}}</td>\n                        <td>{{savingsPlan.Status}}</td>\n                        <td class=\"action-buttons\">\n                            <button class=\"btn btn-primary\" (click)=\"updateSavingsPlan(savingsPlan.SavingsPlanId)\">Edit</button>\n                            <button class=\"btn btn-danger\" (click)=\"confirmDelete(savingsPlan)\">Delete</button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n  </div>\n  <div *ngIf=\"!isLoggedIn()\">\n    <app-error></app-error>\n  </div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    \n    // Check if the user is logged in\n    if (!this.authService.isLoggedIn()) {\n      this.router.navigate(['/login']);\n      return false;\n    }\n\n    const url: string = state.url;\n\n    // RegionalManager role check\n    if (url.includes('manager')) {\n      if (this.authService.isRegionalManager()) {\n        return true;\n      }\n      this.router.navigate(['/error']);\n      return false;\n    }\n\n    // Customer role check\n    if (url.includes('user')) {\n      if (this.authService.isCustomer()) {\n        return true;\n      }\n      this.router.navigate(['/error']);\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AppComponent } from 'src/app/app.component';\nimport { AuthService } from 'src/app/services/auth.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-managernav',\n  templateUrl: './managernav.component.html',\n  styleUrls: ['./managernav.component.css']\n})\nexport class ManagernavComponent implements OnInit {\n\n  \n  name: any = localStorage.getItem('userName');\n\n  constructor(private router: Router, private auth: AuthService) { }\n\n  ngOnInit(): void {\n  }\n  logout() {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, log out!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.auth.logout();\n        this.router.navigate(['/login']);\n        Swal.fire({\n          title: 'Success!',\n          text: 'Logged Out!!!',\n          icon: 'success',\n          confirmButtonText: 'OK'\n        });\n      }\n    });\n  }\n}\n","<div class=\"nav-container\">\n    <div class=\"logo\">\n        <!-- <a style=\"cursor: pointer;\" routerLink=\"/home\">FINANCE HUB</a> -->\n        <a routerLink=\"/home\" style=\"display: flex; align-items: center; text-decoration: none;\">\n            <img src=\"assets/navbar/Logo.jpg\" alt=\"Finance Hub Logo\" class=\"logo-img\" />\n            <span style=\"margin-left: 10px;\">FINANCE HUB</span>\n        </a>\n    </div>\n    <div class=\"menu\">\n        <span class=\"border border-white text-white btn-sm nav-link\">{{name}} / Manager</span>\n        <a style=\"cursor: pointer; padding-right: 20px;\" routerLink=\"/home\">Home</a>\n        <div class=\"dropdown\">\n            <a style=\"cursor: pointer; padding-right: 20px;\" class=\"dropbtn\">Savings Plans</a>\n            <div class=\"dropdown-content\">\n                <a routerLink=\"/addsavingplan\">Add Savings Plan</a>\n                <a routerLink=\"/viewsavingplan\">View Savings Plan</a>\n            </div>\n            \n        </div>\n        <a style=\"cursor: pointer; padding-right: 20px;\"\n            routerLink=\"/managerviewapplications\">Requested Application Forms</a>\n        <a style=\"cursor: pointer; padding-right: 20px;\" routerLink=\"/managerviewfeedbacks\">Feedbacks</a>\n        <button style=\"background-color: rgba(255, 0, 0, 0.774); color: white;\" (click)=\"logout()\">Logout</button>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"nav-container\">\n    <div class=\"logo\">\n        <h2>Finance</h2>\n    </div>\n    <div class=\"menu\">\n        <a routerLink=\"/register\" class=\"nav-link\">Register</a>\n        <a routerLink=\"/login\" class=\"nav-link\">Login</a>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Feedback } from 'src/app/models/feedback.model';\nimport { User } from 'src/app/models/user.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { FeedbackService } from 'src/app/services/feedback.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-managerviewfeedback',\n  templateUrl: './managerviewfeedback.component.html',\n  styleUrls: ['./managerviewfeedback.component.css']\n})\nexport class ManagerviewfeedbackComponent implements OnInit {\n  feedbacks: Feedback[] = [];\n  selectedUser: any = null;\n  isProfileModalOpen: boolean = false;\n\n  constructor(private feedbackService: FeedbackService, private router: Router, private route: ActivatedRoute, private authService:AuthService) { }\n\n  ngOnInit(): void {\n    this.loadFeedbacks();\n  }\n\n  // Load all feedbacks\n  loadFeedbacks(): void {\n    this.feedbackService.getFeedbacks().subscribe((data: any) => {\n      this.feedbacks = data;\n      if (!this.feedbacks.length) {\n        Swal.fire('Oops!', 'No records found.', 'info');\n      }\n    });\n  }\n\n  // Show user profile in a modal\n  showUserProfile(user: User): void {\n    Swal.fire({\n      title: 'User Information',\n      html: `<p><strong>Name:</strong> ${user.Username}</p>\n      <p><strong>Email:</strong> ${user.Email}</p>\n      <p><strong>Mobile Number:</strong> ${user.MobileNumber}</p>`,\n      icon: 'info',\n      confirmButtonText: 'OK'\n    });\n  }\n\n  openProfileModal(user: any): void {\n    this.selectedUser = user;\n    this.isProfileModalOpen = true;\n  }\n\n  closeProfileModal(): void {\n    this.isProfileModalOpen = false;\n    this.selectedUser = null;\n  }\n  \n  isLoggedIn()\n  {\n    return this.authService.isLoggedIn();\n  }\n}\n","<h1>Feedback Details</h1> <!-- Moved heading outside the container -->\n<div *ngIf=\"isLoggedIn()\">\n  <app-managernav></app-managernav>\n  <div class=\"container\">\n    <table class=\"table table-striped\" *ngIf=\"feedbacks.length > 0; else noRecordsFound\">\n      <thead>\n        <tr>\n          <th class=\"comments\">Comments</th>\n          <th>Date Provided</th>\n          <th>User Profile</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let feedback of feedbacks\">\n          <td class=\"comments\">{{ feedback.Comments }}</td>\n          <td>{{ feedback.DateProvided | date: 'dd-MM-yyyy' }}</td>\n          <td>\n            <button class=\"btn btn-info\" (click)=\"showUserProfile(feedback.User)\">Show Profile</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <!-- No Records Found -->\n    <ng-template #noRecordsFound>\n      <p>Oops! No records Found</p>\n    </ng-template>\n  </div>\n</div>\n<div *ngIf=\"!isLoggedIn()\">\n  <app-error></app-error>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { Feedback } from '../models/feedback.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedbackService {\n\n  public apiUrl: string = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n\n  sendFeedback(feedback: Feedback): Observable<any> {\n    return this.http.post<any>(`${this.apiUrl}/api/Feedback`, feedback);\n  }\n\n  getAllFeedbacksByUserId(userId: number): Observable<Feedback[]> {\n    return this.http.get<Feedback[]>(`${this.apiUrl}/api/Feedback/user/${userId}`);\n  }\n\n  deleteFeedback(feedbackId: number): Observable<any> {\n    return this.http.delete<any>(`${this.apiUrl}/api/Feedback/${feedbackId}`);\n  }\n\n  getFeedbacks(): Observable<Feedback[]> {\n    return this.http.get<Feedback[]>(`${this.apiUrl}/api/Feedback`);\n  }\n\n  getUserByUserId(userId: number): Observable<Feedback[]> {\n    return this.http.get<Feedback[]>(`${this.apiUrl}/api/Feedback/user/${userId}`);\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { User } from '../models/user.model';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Login } from '../models/login.model';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  public apiUrl = environment.apiUrl;\n\n  constructor(@Optional() private http: HttpClient) {\n    if (!this.http) {\n      console.warn('HttpClient is not provided!');\n    }\n  }\n\n  register(user: User): Observable<any> {\n    console.log(user);\n    return this.http.post<any>(`${this.apiUrl}/api/register`, user)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  login(login: Login): Observable<any> {\n    return this.http.post(`${this.apiUrl}/api/login`, login)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  // Error handling\n  private handleError(error: HttpErrorResponse): Observable<never> {\n    console.error('An error occurred:', error);\n    return throwError(error.message || 'Server error');\n  }\n\n  // Token and user information management\n  private setItem(key: string, value: string): void {\n    localStorage.setItem(key, value);\n  }\n\n  private getItem(key: string): string | null {\n    return localStorage.getItem(key);\n  }\n\n  private decodeToken(token: string): any {\n    try {\n      return JSON.parse(atob(token.split('.')[1]));\n    } catch (e) {\n      return null;\n    }\n  }\n\n  isRole(): void {\n    const token = this.getItem('authToken');\n    if (token) {\n      const payload = this.decodeToken(token);\n      if (payload) {\n        this.setItem('userRole', payload['http://schemas.microsoft.com/ws/2008/06/identity/claims/role']);\n        this.setItem('userName', payload['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name']);\n        this.setItem('userId', payload['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier']);\n        this.setItem('emailAddress', payload['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress']);\n      }\n    }\n  }\n\n  isLoggedIn(): boolean {\n    const userRole = this.getItem('userRole');\n    return userRole === 'RegionalManager' || userRole === 'Customer';\n  }\n\n  private hasRole(role: string): boolean {\n    return this.getItem('userRole') === role;\n  }\n\n  isRegionalManager(): boolean {\n    return this.hasRole('RegionalManager');\n  }\n\n  isCustomer(): boolean {\n    return this.hasRole('Customer');\n  }\n\n  logout(): void {\n    localStorage.clear();\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PlanApplication } from 'src/app/models/planapplication.model';\nimport { SavingsPlan } from 'src/app/models/savingsplan.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { PlanapplicationformService } from 'src/app/services/planapplicationform.service';\nimport { SavingsplanService } from 'src/app/services/savingsplan.service';\nimport Swal from 'sweetalert2';\nimport { NgForm } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-userplanapplicationform',\n  templateUrl: './userplanapplicationform.component.html',\n  styleUrls: ['./userplanapplicationform.component.css']\n})\nexport class UserplanapplicationformComponent implements OnInit {\n  isAddMode: boolean;\n  id: number = 0;\n  planApplicationForm: PlanApplication = {\n    AppliedAmount: 0,\n    Status: 'pending',\n    ApplicationDate: '',\n    Remarks: '',\n    ProofDocument: '',\n    UserId: 0,\n    SavingsPlanId: 0\n  };\n  savingsPlans: SavingsPlan[] = [];\n  selectedFile: File | null = null;\n  public apiUrl = environment.apiUrl;\n  minDate: string;\n  maxGoalAmount: number; // Ensure this is set\n  amountError: string = '';\n  fileError: string = '';\n\n  constructor(\n    private savingsPlanService: SavingsplanService,\n    private planApplicationformService: PlanapplicationformService,\n    private router: Router,\n    private activateRoute: ActivatedRoute,\n    private http: HttpClient,\n    private authService: AuthService,\n    private cdr: ChangeDetectorRef\n  ) { }\n\n  ngOnInit(): void {\n    this.loadData();\n  }\n\n  loadData(): void {\n    console.log('Loading data...');\n    this.savingsPlanService.getAllSavingsPlans().subscribe((res) => {\n      this.savingsPlans = res;\n      console.log('Savings Plans:', this.savingsPlans);\n    });\n\n    this.id = this.activateRoute.snapshot.params['id'];\n    console.log('ID from route:', this.id);\n\n    this.isAddMode = !this.id;\n    this.planApplicationForm.UserId = parseInt(localStorage.getItem(\"userId\"));\n    this.planApplicationForm.SavingsPlanId = this.id;\n    this.savingsPlanService.getSavingsPlanById(this.id).subscribe(res => {\n      this.maxGoalAmount = res.GoalAmount;\n      console.log('Goal Amount:', this.maxGoalAmount);\n    });\n\n    this.setMinDate();\n  }\n\n  onFileChange(event: any): void {\n    const file = event.target.files[0];\n    if (file) {\n      const fileType = file.type.toLowerCase();\n      if (fileType === 'image/jpeg' || fileType === 'image/png' || fileType === 'image/jpg') {\n        this.selectedFile = file;\n        this.fileError = ''; // Clear any previous error\n      } else {\n        this.fileError = 'Only .jpg, .jpeg, and .png files are allowed.';\n        this.selectedFile = null; // Clear the selected file\n        (event.target as HTMLInputElement).value = ''; // Clear the input value\n      }\n    } else {\n      this.fileError = 'Proof Document is required.';\n    }\n  }\n\n  setMinDate(): void {\n    const today = new Date();\n    const day = String(today.getDate()).padStart(2, '0');\n    const month = String(today.getMonth() + 1).padStart(2, '0');\n    const year = today.getFullYear();\n    this.minDate = `${year}-${month}-${day}`;\n  }\n\n  uploadImage(): Promise<string | null> {\n    return new Promise((resolve, reject) => {\n      if (this.selectedFile) {\n        const formData = new FormData();\n        formData.append('file', this.selectedFile, this.selectedFile.name);\n        const httpOptions = {\n          headers: new HttpHeaders({\n            'Authorization': 'Bearer ' + localStorage.getItem('Token')\n          })\n        };\n\n        this.http.post<{ ImageUrl: string }>(`${this.apiUrl}/api/PlanApplication/application/upload`, formData, httpOptions)\n          .subscribe(\n            response => resolve(response.ImageUrl),\n            error => {\n              console.error('Error uploading image:', error);\n              this.fileError = 'Error uploading image.';\n              reject(error);\n            }\n          );\n      } else {\n        this.fileError = 'No file selected.';\n        resolve(null);\n      }\n    });\n  }\n\n  async addPlan() {\n    try {\n      const imageUrl = await this.uploadImage();\n      this.planApplicationForm.ProofDocument = imageUrl;\n      console.log(this.planApplicationForm);\n      this.planApplicationformService.addPlanApplication(this.planApplicationForm).subscribe(\n        (res) => {\n          Swal.fire('Success!', 'Your application has been submitted.', 'success').then(() => {\n            this.router.navigate(['/userappliedplans']);\n          });\n        },\n        (error) => {\n          Swal.fire('Error!', 'Applied amount exceeds the goal amount of the savings plan.');\n          console.error(\"Error adding application\", error);\n        }\n      );\n    } catch (error) {\n      Swal.fire('Error!', 'Error during image upload or application addition: ' + error.message, 'error');\n      console.error(\"Error during image upload or application addition\", error);\n    }\n  }\n\n  isLoggedIn(): boolean {\n    return this.authService.isLoggedIn();\n  }\n\n  validateAmount(): void {\n    if (this.planApplicationForm.AppliedAmount > this.maxGoalAmount) {\n      this.amountError = 'Applied Amount must be less than or equal to the goal amount.';\n      Swal.fire('Error', this.amountError, 'error');\n    } else {\n      this.amountError = '';\n    }\n  }\n\n  onSubmit(form: NgForm): void {\n    console.log('Form submitted:', form);\n    this.validateAmount();\n    if (form.invalid || this.amountError || this.fileError || !this.selectedFile) {\n      if (!this.selectedFile) {\n        this.fileError = 'Proof Document is required.';\n      }\n      if (this.fileError) {\n        Swal.fire('Error!', this.fileError, 'error');\n      }\n      console.log('Form is invalid');\n      return;\n    }\n    console.log('Form is valid');\n    this.addPlan();\n  }\n}\n","<h2 class=\"font-roboto\">Plan Application Form</h2>\n<div *ngIf=\"isLoggedIn()\">\n  <app-usernav></app-usernav>\n  <div class=\"container mt-5 w-50\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <form #form=\"ngForm\" (ngSubmit)=\"onSubmit(form)\">\n          <div class=\"form-group\">\n            <input type=\"number\" placeholder=\" \" class=\"form-control\" id=\"appliedAmount\" required\n                   [(ngModel)]=\"planApplicationForm.AppliedAmount\" name=\"appliedAmount\"\n                   #appliedAmount=\"ngModel\" (ngModelChange)=\"validateAmount()\">\n            <label for=\"appliedAmount\">Applied Amount<span style=\"color: red;\">*</span></label>\n            <div id=\"error\" *ngIf=\"appliedAmount.invalid && (appliedAmount.touched || appliedAmount.dirty) || amountError\"\n                 class=\"error-message\">\n              <p class=\"text-danger\">Applied Amount is required {{ amountError }}</p>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <input type=\"date\" placeholder=\" \" class=\"form-control\" id=\"applicationDate\" required\n                   [(ngModel)]=\"planApplicationForm.ApplicationDate\" name=\"applicationDate\" #applicationDate=\"ngModel\"\n                   [min]=\"minDate\">\n            <label for=\"applicationDate\">Application Date<span style=\"color: red;\">*</span></label>\n            <div id=\"error\" *ngIf=\"applicationDate.invalid && (applicationDate.touched || applicationDate.dirty)\"\n                 class=\"error-message\">\n              <p class=\"text-danger\">Application Date is required</p>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <textarea class=\"form-control\" id=\"remarks\" placeholder=\" \" rows=\"3\" required\n                      [(ngModel)]=\"planApplicationForm.Remarks\" name=\"remarks\" #remarks=\"ngModel\"></textarea>\n            <label for=\"remarks\">Remarks<span style=\"color: red;\">*</span></label>\n            <div id=\"error\" *ngIf=\"remarks.invalid && (remarks.touched || remarks.dirty)\"\n                 class=\"error-message\">\n              <p class=\"text-danger\">Remarks is required</p>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <input type=\"file\" class=\"form-control\" id=\"proof\" name=\"proof\" (change)=\"onFileChange($event)\" required>\n            <label for=\"proof\">Proof Document<span style=\"color: red;\">*</span></label>\n            <small class=\"form-text text-muted\">Only .jpeg, .jpg, .png files are allowed</small>\n            <div id=\"error\" *ngIf=\"fileError || !selectedFile\" class=\"error-message\">\n              <p class=\"text-danger\">{{ fileError ? fileError : 'Proof Document is required' }}</p>\n            </div>\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"form.invalid || amountError || fileError\">Submit</button>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n<div *ngIf=\"!isLoggedIn()\">\n  <app-error></app-error>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ManagercreatesavingsplanComponent } from './components/managercreatesavingsplan/managercreatesavingsplan.component';\nimport { ManagerviewsavingsplanComponent } from './components/managerviewsavingsplan/managerviewsavingsplan.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { RegistrationComponent } from './components/registration/registration.component';\nimport { ManagereditsavingsplanComponent } from './components/managereditsavingsplan/managereditsavingsplan.component';\nimport { UseraddfeedbackComponent } from './components/useraddfeedback/useraddfeedback.component';\nimport { UserviewfeedbackComponent } from './components/userviewfeedback/userviewfeedback.component';\nimport { ManagerviewfeedbackComponent } from './components/managerviewfeedback/managerviewfeedback.component';\nimport { UserplanapplicationformComponent } from './components/userplanapplicationform/userplanapplicationform.component';\nimport { ManagerviewapplicationformComponent } from './components/managerviewapplicationform/managerviewapplicationform.component';\nimport { UserviewsavingsplanComponent } from './components/userviewsavingsplan/userviewsavingsplan.component';\nimport { UserappliedplansComponent } from './components/userappliedplans/userappliedplans.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { AuthGuard } from './components/authguard/auth.guard';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'addsavingplan', component: ManagercreatesavingsplanComponent, canActivate: [AuthGuard], data: { roles: ['RegionalManager'] } },\n  { path: 'viewsavingplan', component: ManagerviewsavingsplanComponent, canActivate: [AuthGuard], data: { roles: ['RegionalManager'] } },\n  { path: 'managereditsavingsplan/:id', component: ManagereditsavingsplanComponent, canActivate: [AuthGuard], data: { roles: ['RegionalManager'] } },\n  { path: 'useraddfeedback', component: UseraddfeedbackComponent, canActivate: [AuthGuard], data: { roles: ['Customer'] } },\n  { path: 'userviewfeedback', component: UserviewfeedbackComponent, canActivate: [AuthGuard], data: { roles: ['Customer'] } },\n  { path: 'managerviewfeedbacks', component: ManagerviewfeedbackComponent, canActivate: [AuthGuard], data: { roles: ['RegionalManager'] } },\n  { path: 'userviewsavingsplan', component: UserviewsavingsplanComponent, canActivate: [AuthGuard], data: { roles: ['Customer'] } },\n  { path: 'userplanapplication/:id', component: UserplanapplicationformComponent, canActivate: [AuthGuard], data: { roles: ['Customer'] } },\n  { path: 'managerviewapplications', component: ManagerviewapplicationformComponent, canActivate: [AuthGuard], data: { roles: ['RegionalManager'] } },\n  { path: 'userappliedplans', component: UserappliedplansComponent, canActivate: [AuthGuard], data: { roles: ['Customer'] } },\n  { path: 'register', component: RegistrationComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'home', component: HomeComponent },\n  { path: 'error', component: ErrorComponent },\n  { path: '**', redirectTo: 'error' } // Fallback route for unknown paths\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}